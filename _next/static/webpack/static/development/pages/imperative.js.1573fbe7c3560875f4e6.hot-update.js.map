{"version":3,"file":"static/webpack/static/development/pages/imperative.js.1573fbe7c3560875f4e6.hot-update.js","sources":["webpack:///./pages/imperative.js"],"sourcesContent":["// @flow\n\n/**\n * <!-- {\"order\": 5} -->\n *\n * # Google map methods\n *\n * As like as using _useMap_ at _Map_ children Components you can\n * use ref to map instance and apply any operation on\n * [google map instance](https://developers.google.com/maps/documentation/javascript/reference/map) imperatively.\n *\n * Using _ref_ and _useEffect_ you can make any property controllable if needed.\n */\n\nimport * as React from 'react';\nimport { Map } from 'rgm';\nimport { Flex, Box } from 'react-system';\nimport { useGoogleApiLoader } from '../dev-src/hooks';\nimport { Ratio } from '../dev-src/controls';\n\n// https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions\nconst MAP_OPTIONS = {\n  zoom: 9,\n  center: {\n    lat: 59.936,\n    lng: 30.314,\n  },\n};\n\nconst getSize = elt => {\n  const rect = elt.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n  };\n};\n\nexport default function Imperative() {\n  const api = useGoogleApiLoader();\n  const [map, setMap] = React.useState(null);\n  const getOptions = elt =>\n    getSize(elt).width < 500\n      ? { ...MAP_OPTIONS, disableDefaultUI: true }\n      : MAP_OPTIONS;\n\n  return (\n    <div>\n      <Flex p={3}>\n        <button\n          onClick={() => {\n            map?.panBy(\n              200 * (Math.random() - 0.5),\n              200 * (Math.random() - 0.5),\n            );\n          }}\n        >\n          Move\n        </button>\n        <Box width={'16px'} />\n        <button\n          onClick={() => {\n            map?.setOptions({\n              disableDefaultUI: true,\n            });\n          }}\n        >\n          Disable ui\n        </button>\n        <Box width={'16px'} />\n        <button\n          onClick={() => {\n            map?.setOptions({\n              disableDefaultUI: false,\n            });\n          }}\n        >\n          Enable ui\n        </button>\n      </Flex>\n      <Ratio value={3 / 4}>\n        {api && <Map ref={setMap} api={api} options={getOptions}></Map>}\n      </Ratio>\n    </div>\n  );\n}\n\nexport const getStaticProps = async () => {\n  // The best is to place this method at _app.js but this doesn't work now\n  const doc = await import('../dev-src/doc');\n  return doc.getStaticProps();\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAOA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}