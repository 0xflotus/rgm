{"version":3,"file":"static/webpack/static/development/pages/performance.js.7692b58ad5d2fc3bd62a.hot-update.js","sources":["webpack:///./pages/performance.js"],"sourcesContent":["// @flow\n\n/**\n * <!-- {\"order\": 8 } -->\n *\n * # N markers\n *\n * Example of drawing N React markers.\n *\n */\n\nimport * as React from 'react';\nimport { Map, Overlay, Marker } from 'rgm';\nimport { css } from '@emotion/core';\nimport { Flex, Box } from 'react-system';\nimport { useGoogleApiLoader } from '../dev-src/hooks';\nimport { Ratio, Select } from '../dev-src/controls';\n\n// https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions\nconst MAP_OPTIONS = {\n  zoom: 9,\n  center: {\n    lat: 59.936,\n    lng: 30.314,\n  },\n  gestureHandling: 'greedy',\n  clickableIcons: false,\n};\n\nconst genRandomMarkers = n =>\n  Array.from(Array(n), () => {\n    const r = Math.random() * 2 + 0.05;\n    const angle = Math.random() * 2 * Math.PI;\n\n    return {\n      lat: MAP_OPTIONS.center.lat + r * Math.cos(angle),\n      lng: MAP_OPTIONS.center.lng + r * Math.sin(angle),\n    };\n  });\n\nexport default function Performance() {\n  const api = useGoogleApiLoader();\n  const INITIAL_MARKERS_COUNT = 200;\n  const [markers, setMarkers] = React.useState(() =>\n    genRandomMarkers(INITIAL_MARKERS_COUNT),\n  );\n\n  return (\n    <div>\n      <Flex p={3}>\n        <Box pr={2}>Count:</Box>\n        <Select\n          options={['100', '200', '300', '500', '1000', '2000']}\n          value={`${markers.length}`}\n          onChange={v => {\n            setMarkers(genRandomMarkers(Number.parseFloat(v)));\n          }}\n        />\n      </Flex>\n      <Ratio value={3 / 4}>\n        {api && (\n          <Map api={api} options={MAP_OPTIONS}>\n            <Overlay>\n              {markers.map((m, index) => (\n                <Marker key={index} lat={m.lat} lng={m.lng}>\n                  <CircleMarker />\n                </Marker>\n              ))}\n            </Overlay>\n          </Map>\n        )}\n      </Ratio>\n    </div>\n  );\n}\n\nconst CircleMarker = () => (\n  <div\n    css={css`\n      place-self: center center;\n      width: 10px;\n      height: 10px;\n      border-radius: 100%;\n      background-color: white;\n      border: 2px solid red;\n    `}\n  />\n);\n\nexport const getStaticProps = async () => {\n  // The best is to place this method at _app.js but this doesn't work now\n  const doc = await import('../dev-src/doc');\n  return doc.getStaticProps();\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;AASA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AACA;AASA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AATA;AACA;;AAUA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAGA;AAAA;AAHA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AACA;;;;;;;;AACA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;A","sourceRoot":""}